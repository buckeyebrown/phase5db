defaultTasks 'java'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'


jar {
    baseName = 'gs-spring-boot'
    version =  '0.1.0'
}

springBoot {
  mainClass = "com.phasefive.springboot.Phase5Application"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
	mavenLocal()
}

configurations{
	all*.exclude module: 'hamcrest-core'
	all*.exclude module: 'mockito-all'
}

dependencies {

    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    
    
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]
    testCompile("junit:junit")


}

dependencies {

    compile 'org.json:json:20160212',
    'junit:junit:4.12',
	'org.mockito:mockito-core:1.9.5',
    'ru.shadam.gretty:gretty-runner-tomcat8:1.3.0'
		
    testCompile 'junit:junit:4.12',
    'org.hamcrest:hamcrest-all:1.3',
	'org.mockito:mockito-core:1.9.5'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

task initJavaFolders() {
		description 'Initializes Java src and test folders.'
		doLast{
			def dirElements =  [['src'],['main', 'test'],['java','resources']].combinations()
			dirElements.each {
				def dir = new File(it.join(File.separator))
			
				if(!dir.exists()) {
					dir.mkdirs()
					println "created $dir"
				}
			}
		}
}

